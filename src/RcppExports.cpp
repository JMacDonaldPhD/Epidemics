// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// calling_c
NumericVector calling_c(NumericVector x, NumericVector y);
RcppExport SEXP _Epidemics_calling_c(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(calling_c(x, y));
    return rcpp_result_gen;
END_RCPP
}
// concat
NumericVector concat(NumericVector x, NumericVector y);
RcppExport SEXP _Epidemics_concat(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(concat(x, y));
    return rcpp_result_gen;
END_RCPP
}
// event_epidemicsC
List event_epidemicsC(NumericVector individual_inf_rate, double gamma, int Y, NumericVector U);
RcppExport SEXP _Epidemics_event_epidemicsC(SEXP individual_inf_rateSEXP, SEXP gammaSEXP, SEXP YSEXP, SEXP USEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type individual_inf_rate(individual_inf_rateSEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< int >::type Y(YSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type U(USEXP);
    rcpp_result_gen = Rcpp::wrap(event_epidemicsC(individual_inf_rate, gamma, Y, U));
    return rcpp_result_gen;
END_RCPP
}
// prod_part_infC
double prod_part_infC(NumericVector inf_times, NumericVector rem_times, NumericMatrix B, bool log);
RcppExport SEXP _Epidemics_prod_part_infC(SEXP inf_timesSEXP, SEXP rem_timesSEXP, SEXP BSEXP, SEXP logSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type inf_times(inf_timesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rem_times(rem_timesSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type B(BSEXP);
    Rcpp::traits::input_parameter< bool >::type log(logSEXP);
    rcpp_result_gen = Rcpp::wrap(prod_part_infC(inf_times, rem_times, B, log));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_Epidemics_calling_c", (DL_FUNC) &_Epidemics_calling_c, 2},
    {"_Epidemics_concat", (DL_FUNC) &_Epidemics_concat, 2},
    {"_Epidemics_event_epidemicsC", (DL_FUNC) &_Epidemics_event_epidemicsC, 4},
    {"_Epidemics_prod_part_infC", (DL_FUNC) &_Epidemics_prod_part_infC, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_Epidemics(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
